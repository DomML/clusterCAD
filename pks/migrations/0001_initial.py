# Generated by Django 2.2.3 on 2022-05-27 22:06

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('compounddb', '0002_rdkit_cartridge'),
    ]

    operations = [
        migrations.CreateModel(
            name='Cluster',
            fields=[
                ('mibigAccession', models.CharField(max_length=100, primary_key=True, serialize=False)),
                ('genbankAccession', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('sequence', models.TextField()),
                ('knownProductSmiles', models.TextField()),
                ('knownProductMCS', models.TextField()),
                ('knownProductSource', models.TextField(default='unknown')),
                ('reviewed', models.BooleanField(default=False)),
                ('notes', models.TextField(default='There are no notes available for this cluster. ')),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start', models.PositiveIntegerField()),
                ('stop', models.PositiveIntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='A',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('substrate', models.CharField(choices=[('methylbenz-val', 'methylbenz-val'), ('d-met', 'd-met'), ('ema', 'ema'), ('hpg', 'hpg'), ('beta-OH-tyr', 'beta-OH-tyr'), ('his', 'his'), ('asp-2', 'asp-2'), ('thr', 'thr'), ('plac', 'plac'), ('butylguanidine', 'butylguanidine'), ('ile', 'ile'), ('choi', 'choi'), ('2metbut', '2metbut'), ('mpro', 'mpro'), ('d-thr', 'd-thr'), ('arg-AA', 'arg-AA'), ('hse', 'hse'), ('d-ile', 'd-ile'), ('hmal', 'hmal'), ('isobutmal', 'isobutmal'), ('isobut', 'isobut'), ('N/A', 'N/A'), ('DHCHene', 'DHCHene'), ('end', 'end'), ('asn', 'asn'), ('propylamine', 'propylamine'), ('6-me-hexyl-thr', '6-me-hexyl-thr'), ('cremimycin1', 'cremimycin1'), ('beta-OH-asp', 'beta-OH-asp'), ('16C-FA', '16C-FA'), ('d-gln', 'd-gln'), ('mal', 'mal'), ('d-glu', 'd-glu'), ('guan', 'guan'), ('2aminopent', '2aminopent'), ('o-hydroxybenz', 'o-hydroxybenz'), ('methylbenz', 'methylbenz'), ('glu', 'glu'), ('me-glu', 'me-glu'), ('prop', 'prop'), ('mxmal', 'mxmal'), ('AAnon', 'AAnon'), ('dhb', 'dhb'), ('NH2', 'NH2'), ('CHC-CoA', 'CHC-CoA'), ('d-trp', 'd-trp'), ('kyn', 'kyn'), ('leu', 'leu'), ('alpha-OH-htyr', 'alpha-OH-htyr'), ('DHCH', 'DHCH'), ('htyr', 'htyr'), ('cemal', 'cemal'), ('heronamide-1', 'heronamide-1'), ('d-ala', 'd-ala'), ('cyclopentene', 'cyclopentene'), ('butmal', 'butmal'), ('d-glu-2', 'd-glu-2'), ('dpg', 'dpg'), ('3cl-tyr', '3cl-tyr'), ('vinylcinnamoyl', 'vinylcinnamoyl'), ('me-pro', 'me-pro'), ('pro', 'pro'), ('gly', 'gly'), ('3aminobut', '3aminobut'), ('aba', 'aba'), ('d-leu', 'd-leu'), ('beta-amino-phe', 'beta-amino-phe'), ('asp', 'asp'), ('isoval', 'isoval'), ('fatty_acid', 'fatty_acid'), ('lipopep-8D1-1', 'lipopep-8D1-1'), ('d-cys', 'd-cys'), ('ala', 'ala'), ('beta-OH-asn', 'beta-OH-asn'), ('14C-FA', '14C-FA'), ('d-asn', 'd-asn'), ('cin', 'cin'), ('trp', 'trp'), ('mxmal_ACP', 'mxmal_ACP'), ('be-14106-1', 'be-14106-1'), ('shikimic_acid', 'shikimic_acid'), ('ser', 'ser'), ('8C-AA', '8C-AA'), ('me-PABA', 'me-PABA'), ('AHBA', 'AHBA'), ('2356-OH-me-benz', '2356-OH-me-benz'), ('a3abut', 'a3abut'), ('val', 'val'), ('2-oxobutmal', '2-oxobutmal'), ('me-tyr', 'me-tyr'), ('d-pro', 'd-pro'), ('DCP', 'DCP'), ('d-val', 'd-val'), ('bmt', 'bmt'), ('3measp', '3measp'), ('gln', 'gln'), ('N-OH-orn', 'N-OH-orn'), ('cys', 'cys'), ('orn', 'orn'), ('PNBA', 'PNBA'), ('2-etmalonamyl', '2-etmalonamyl'), ('d-asp', 'd-asp'), ('d-ser', 'd-ser'), ('dab', 'dab'), ('met', 'met'), ('PABA', 'PABA'), ('arg', 'arg'), ('beta-amino-glu', 'beta-amino-glu'), ('emal', 'emal'), ('piperazic', 'piperazic'), ('gamma-OH-lys', 'gamma-OH-lys'), ('pyr', 'pyr'), ('d-his', 'd-his'), ('dap', 'dap'), ('lys', 'lys'), ('phe', 'phe'), ('ml-449-1', 'ml-449-1'), ('m-tyr', 'm-tyr'), ('D-isobutmal', 'D-isobutmal'), ('alpha-OH-phe', 'alpha-OH-phe'), ('ethylguanidine', 'ethylguanidine'), ('d-arg', 'd-arg'), ('trans-1,2-CPDA', 'trans-1,2-CPDA'), ('hpla', 'hpla'), ('butylamine', 'butylamine'), ('d-lys', 'd-lys'), ('10C-FA', '10C-FA'), ('benz', 'benz'), ('tyr', 'tyr'), ('allylmal', 'allylmal'), ('d-tyr', 'd-tyr'), ('mthz', 'mthz'), ('me-asp', 'me-asp'), ('3-me-hexmal', '3-me-hexmal'), ('mmal', 'mmal'), ('d-phe', 'd-phe'), ('Acetyl-CoA', 'Acetyl-CoA'), ('hexmal', 'hexmal'), ('pip', 'pip')], default='gly', max_length=25)),
                ('type', models.CharField(choices=[('none', 'none'), ('oxidation', 'oxidation'), ('reduction', 'reduction')], default='none', max_length=10)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='ACP',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('substrate', models.CharField(choices=[('methylbenz-val', 'methylbenz-val'), ('d-met', 'd-met'), ('ema', 'ema'), ('hpg', 'hpg'), ('beta-OH-tyr', 'beta-OH-tyr'), ('his', 'his'), ('asp-2', 'asp-2'), ('thr', 'thr'), ('plac', 'plac'), ('butylguanidine', 'butylguanidine'), ('ile', 'ile'), ('choi', 'choi'), ('2metbut', '2metbut'), ('mpro', 'mpro'), ('d-thr', 'd-thr'), ('arg-AA', 'arg-AA'), ('hse', 'hse'), ('d-ile', 'd-ile'), ('isobut', 'isobut'), ('DHCHene', 'DHCHene'), ('N/A', 'N/A'), ('end', 'end'), ('propylamine', 'propylamine'), ('16C-FA', '16C-FA'), ('asn', 'asn'), ('cremimycin1', 'cremimycin1'), ('beta-OH-asp', 'beta-OH-asp'), ('6-me-hexyl-thr', '6-me-hexyl-thr'), ('d-gln', 'd-gln'), ('mal', 'mal'), ('guan', 'guan'), ('d-glu', 'd-glu'), ('2aminopent', '2aminopent'), ('o-hydroxybenz', 'o-hydroxybenz'), ('methylbenz', 'methylbenz'), ('glu', 'glu'), ('me-glu', 'me-glu'), ('prop', 'prop'), ('mxmal', 'mxmal'), ('AAnon', 'AAnon'), ('NH2', 'NH2'), ('dhb', 'dhb'), ('CHC-CoA', 'CHC-CoA'), ('d-trp', 'd-trp'), ('kyn', 'kyn'), ('leu', 'leu'), ('alpha-OH-htyr', 'alpha-OH-htyr'), ('DHCH', 'DHCH'), ('htyr', 'htyr'), ('cemal', 'cemal'), ('heronamide-1', 'heronamide-1'), ('d-ala', 'd-ala'), ('cyclopentene', 'cyclopentene'), ('butmal', 'butmal'), ('d-glu-2', 'd-glu-2'), ('dpg', 'dpg'), ('3cl-tyr', '3cl-tyr'), ('vinylcinnamoyl', 'vinylcinnamoyl'), ('me-pro', 'me-pro'), ('pro', 'pro'), ('gly', 'gly'), ('3aminobut', '3aminobut'), ('aba', 'aba'), ('beta-amino-phe', 'beta-amino-phe'), ('d-leu', 'd-leu'), ('asp', 'asp'), ('isoval', 'isoval'), ('fatty_acid', 'fatty_acid'), ('lipopep-8D1-1', 'lipopep-8D1-1'), ('d-cys', 'd-cys'), ('ala', 'ala'), ('beta-OH-asn', 'beta-OH-asn'), ('14C-FA', '14C-FA'), ('d-asn', 'd-asn'), ('cin', 'cin'), ('trp', 'trp'), ('mxmal_ACP', 'mxmal_ACP'), ('be-14106-1', 'be-14106-1'), ('shikimic_acid', 'shikimic_acid'), ('ser', 'ser'), ('8C-AA', '8C-AA'), ('AHBA', 'AHBA'), ('me-PABA', 'me-PABA'), ('2356-OH-me-benz', '2356-OH-me-benz'), ('a3abut', 'a3abut'), ('val', 'val'), ('me-tyr', 'me-tyr'), ('d-pro', 'd-pro'), ('DCP', 'DCP'), ('d-val', 'd-val'), ('3measp', '3measp'), ('bmt', 'bmt'), ('gln', 'gln'), ('2-etmalonamyl', '2-etmalonamyl'), ('cys', 'cys'), ('PNBA', 'PNBA'), ('orn', 'orn'), ('N-OH-orn', 'N-OH-orn'), ('d-asp', 'd-asp'), ('d-ser', 'd-ser'), ('dab', 'dab'), ('met', 'met'), ('PABA', 'PABA'), ('arg', 'arg'), ('beta-amino-glu', 'beta-amino-glu'), ('piperazic', 'piperazic'), ('gamma-OH-lys', 'gamma-OH-lys'), ('pyr', 'pyr'), ('d-his', 'd-his'), ('dap', 'dap'), ('lys', 'lys'), ('phe', 'phe'), ('ml-449-1', 'ml-449-1'), ('m-tyr', 'm-tyr'), ('alpha-OH-phe', 'alpha-OH-phe'), ('ethylguanidine', 'ethylguanidine'), ('d-arg', 'd-arg'), ('trans-1,2-CPDA', 'trans-1,2-CPDA'), ('butylamine', 'butylamine'), ('hpla', 'hpla'), ('10C-FA', '10C-FA'), ('d-lys', 'd-lys'), ('benz', 'benz'), ('tyr', 'tyr'), ('d-tyr', 'd-tyr'), ('mthz', 'mthz'), ('me-asp', 'me-asp'), ('mmal', 'mmal'), ('d-phe', 'd-phe'), ('Acetyl-CoA', 'Acetyl-CoA'), ('pip', 'pip')], default=None, max_length=20)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='AOX',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='AT',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('substrate', models.CharField(choices=[('methylbenz-val', 'methylbenz-val'), ('d-met', 'd-met'), ('ema', 'ema'), ('hpg', 'hpg'), ('beta-OH-tyr', 'beta-OH-tyr'), ('his', 'his'), ('asp-2', 'asp-2'), ('thr', 'thr'), ('plac', 'plac'), ('butylguanidine', 'butylguanidine'), ('ile', 'ile'), ('choi', 'choi'), ('2metbut', '2metbut'), ('mpro', 'mpro'), ('d-thr', 'd-thr'), ('arg-AA', 'arg-AA'), ('hse', 'hse'), ('d-ile', 'd-ile'), ('hmal', 'hmal'), ('isobutmal', 'isobutmal'), ('isobut', 'isobut'), ('N/A', 'N/A'), ('DHCHene', 'DHCHene'), ('end', 'end'), ('asn', 'asn'), ('propylamine', 'propylamine'), ('6-me-hexyl-thr', '6-me-hexyl-thr'), ('cremimycin1', 'cremimycin1'), ('beta-OH-asp', 'beta-OH-asp'), ('16C-FA', '16C-FA'), ('d-gln', 'd-gln'), ('mal', 'mal'), ('d-glu', 'd-glu'), ('guan', 'guan'), ('2aminopent', '2aminopent'), ('o-hydroxybenz', 'o-hydroxybenz'), ('methylbenz', 'methylbenz'), ('glu', 'glu'), ('me-glu', 'me-glu'), ('prop', 'prop'), ('mxmal', 'mxmal'), ('AAnon', 'AAnon'), ('dhb', 'dhb'), ('NH2', 'NH2'), ('CHC-CoA', 'CHC-CoA'), ('d-trp', 'd-trp'), ('kyn', 'kyn'), ('leu', 'leu'), ('alpha-OH-htyr', 'alpha-OH-htyr'), ('DHCH', 'DHCH'), ('htyr', 'htyr'), ('cemal', 'cemal'), ('heronamide-1', 'heronamide-1'), ('d-ala', 'd-ala'), ('cyclopentene', 'cyclopentene'), ('butmal', 'butmal'), ('d-glu-2', 'd-glu-2'), ('dpg', 'dpg'), ('3cl-tyr', '3cl-tyr'), ('vinylcinnamoyl', 'vinylcinnamoyl'), ('me-pro', 'me-pro'), ('pro', 'pro'), ('gly', 'gly'), ('3aminobut', '3aminobut'), ('aba', 'aba'), ('d-leu', 'd-leu'), ('beta-amino-phe', 'beta-amino-phe'), ('asp', 'asp'), ('isoval', 'isoval'), ('fatty_acid', 'fatty_acid'), ('lipopep-8D1-1', 'lipopep-8D1-1'), ('d-cys', 'd-cys'), ('ala', 'ala'), ('beta-OH-asn', 'beta-OH-asn'), ('14C-FA', '14C-FA'), ('d-asn', 'd-asn'), ('cin', 'cin'), ('trp', 'trp'), ('mxmal_ACP', 'mxmal_ACP'), ('be-14106-1', 'be-14106-1'), ('shikimic_acid', 'shikimic_acid'), ('ser', 'ser'), ('8C-AA', '8C-AA'), ('me-PABA', 'me-PABA'), ('AHBA', 'AHBA'), ('2356-OH-me-benz', '2356-OH-me-benz'), ('a3abut', 'a3abut'), ('val', 'val'), ('2-oxobutmal', '2-oxobutmal'), ('me-tyr', 'me-tyr'), ('d-pro', 'd-pro'), ('DCP', 'DCP'), ('d-val', 'd-val'), ('bmt', 'bmt'), ('3measp', '3measp'), ('gln', 'gln'), ('N-OH-orn', 'N-OH-orn'), ('cys', 'cys'), ('orn', 'orn'), ('PNBA', 'PNBA'), ('2-etmalonamyl', '2-etmalonamyl'), ('d-asp', 'd-asp'), ('d-ser', 'd-ser'), ('dab', 'dab'), ('met', 'met'), ('PABA', 'PABA'), ('arg', 'arg'), ('beta-amino-glu', 'beta-amino-glu'), ('emal', 'emal'), ('piperazic', 'piperazic'), ('gamma-OH-lys', 'gamma-OH-lys'), ('pyr', 'pyr'), ('d-his', 'd-his'), ('dap', 'dap'), ('lys', 'lys'), ('phe', 'phe'), ('ml-449-1', 'ml-449-1'), ('m-tyr', 'm-tyr'), ('D-isobutmal', 'D-isobutmal'), ('alpha-OH-phe', 'alpha-OH-phe'), ('ethylguanidine', 'ethylguanidine'), ('d-arg', 'd-arg'), ('trans-1,2-CPDA', 'trans-1,2-CPDA'), ('hpla', 'hpla'), ('butylamine', 'butylamine'), ('d-lys', 'd-lys'), ('10C-FA', '10C-FA'), ('benz', 'benz'), ('tyr', 'tyr'), ('allylmal', 'allylmal'), ('d-tyr', 'd-tyr'), ('mthz', 'mthz'), ('me-asp', 'me-asp'), ('3-me-hexmal', '3-me-hexmal'), ('mmal', 'mmal'), ('d-phe', 'd-phe'), ('Acetyl-CoA', 'Acetyl-CoA'), ('hexmal', 'hexmal'), ('pip', 'pip')], default='mal', max_length=20)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='C',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('type', models.CharField(choices=[('Unknown', 'Unknown'), ('Starter', 'Starter'), ('LCL', 'LCL'), ('DCL', 'DCL'), ('Dual', 'Dual'), ('Glycopeptide', 'Glycopeptide')], default=None, max_length=12)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='CAL',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('substrate', models.CharField(choices=[('methylbenz-val', 'methylbenz-val'), ('d-met', 'd-met'), ('ema', 'ema'), ('hpg', 'hpg'), ('beta-OH-tyr', 'beta-OH-tyr'), ('his', 'his'), ('asp-2', 'asp-2'), ('thr', 'thr'), ('plac', 'plac'), ('butylguanidine', 'butylguanidine'), ('ile', 'ile'), ('choi', 'choi'), ('2metbut', '2metbut'), ('mpro', 'mpro'), ('d-thr', 'd-thr'), ('arg-AA', 'arg-AA'), ('hse', 'hse'), ('d-ile', 'd-ile'), ('hmal', 'hmal'), ('isobutmal', 'isobutmal'), ('isobut', 'isobut'), ('N/A', 'N/A'), ('DHCHene', 'DHCHene'), ('end', 'end'), ('asn', 'asn'), ('propylamine', 'propylamine'), ('6-me-hexyl-thr', '6-me-hexyl-thr'), ('cremimycin1', 'cremimycin1'), ('beta-OH-asp', 'beta-OH-asp'), ('16C-FA', '16C-FA'), ('d-gln', 'd-gln'), ('mal', 'mal'), ('d-glu', 'd-glu'), ('guan', 'guan'), ('2aminopent', '2aminopent'), ('o-hydroxybenz', 'o-hydroxybenz'), ('methylbenz', 'methylbenz'), ('glu', 'glu'), ('me-glu', 'me-glu'), ('prop', 'prop'), ('mxmal', 'mxmal'), ('AAnon', 'AAnon'), ('dhb', 'dhb'), ('NH2', 'NH2'), ('CHC-CoA', 'CHC-CoA'), ('d-trp', 'd-trp'), ('kyn', 'kyn'), ('leu', 'leu'), ('alpha-OH-htyr', 'alpha-OH-htyr'), ('DHCH', 'DHCH'), ('htyr', 'htyr'), ('cemal', 'cemal'), ('heronamide-1', 'heronamide-1'), ('d-ala', 'd-ala'), ('cyclopentene', 'cyclopentene'), ('butmal', 'butmal'), ('d-glu-2', 'd-glu-2'), ('dpg', 'dpg'), ('3cl-tyr', '3cl-tyr'), ('vinylcinnamoyl', 'vinylcinnamoyl'), ('me-pro', 'me-pro'), ('pro', 'pro'), ('gly', 'gly'), ('3aminobut', '3aminobut'), ('aba', 'aba'), ('d-leu', 'd-leu'), ('beta-amino-phe', 'beta-amino-phe'), ('asp', 'asp'), ('isoval', 'isoval'), ('fatty_acid', 'fatty_acid'), ('lipopep-8D1-1', 'lipopep-8D1-1'), ('d-cys', 'd-cys'), ('ala', 'ala'), ('beta-OH-asn', 'beta-OH-asn'), ('14C-FA', '14C-FA'), ('d-asn', 'd-asn'), ('cin', 'cin'), ('trp', 'trp'), ('mxmal_ACP', 'mxmal_ACP'), ('be-14106-1', 'be-14106-1'), ('shikimic_acid', 'shikimic_acid'), ('ser', 'ser'), ('8C-AA', '8C-AA'), ('me-PABA', 'me-PABA'), ('AHBA', 'AHBA'), ('2356-OH-me-benz', '2356-OH-me-benz'), ('a3abut', 'a3abut'), ('val', 'val'), ('2-oxobutmal', '2-oxobutmal'), ('me-tyr', 'me-tyr'), ('d-pro', 'd-pro'), ('DCP', 'DCP'), ('d-val', 'd-val'), ('bmt', 'bmt'), ('3measp', '3measp'), ('gln', 'gln'), ('N-OH-orn', 'N-OH-orn'), ('cys', 'cys'), ('orn', 'orn'), ('PNBA', 'PNBA'), ('2-etmalonamyl', '2-etmalonamyl'), ('d-asp', 'd-asp'), ('d-ser', 'd-ser'), ('dab', 'dab'), ('met', 'met'), ('PABA', 'PABA'), ('arg', 'arg'), ('beta-amino-glu', 'beta-amino-glu'), ('emal', 'emal'), ('piperazic', 'piperazic'), ('gamma-OH-lys', 'gamma-OH-lys'), ('pyr', 'pyr'), ('d-his', 'd-his'), ('dap', 'dap'), ('lys', 'lys'), ('phe', 'phe'), ('ml-449-1', 'ml-449-1'), ('m-tyr', 'm-tyr'), ('D-isobutmal', 'D-isobutmal'), ('alpha-OH-phe', 'alpha-OH-phe'), ('ethylguanidine', 'ethylguanidine'), ('d-arg', 'd-arg'), ('trans-1,2-CPDA', 'trans-1,2-CPDA'), ('hpla', 'hpla'), ('butylamine', 'butylamine'), ('d-lys', 'd-lys'), ('10C-FA', '10C-FA'), ('benz', 'benz'), ('tyr', 'tyr'), ('allylmal', 'allylmal'), ('d-tyr', 'd-tyr'), ('mthz', 'mthz'), ('me-asp', 'me-asp'), ('3-me-hexmal', '3-me-hexmal'), ('mmal', 'mmal'), ('d-phe', 'd-phe'), ('Acetyl-CoA', 'Acetyl-CoA'), ('hexmal', 'hexmal'), ('pip', 'pip')], default='mal', max_length=20)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='cMT',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='Cy',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='DH',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='E',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='ER',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='F',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='KR',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField()),
                ('type', models.CharField(choices=[('A1', 'A1'), ('A2', 'A2'), ('A', 'A'), ('B1', 'B1'), ('B2', 'B2'), ('B', 'B'), ('C1', 'C1'), ('C2', 'C2'), ('U', 'U')], default=None, max_length=2)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='KS',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='nMT',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='oMT',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='PCP',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='R',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
                ('type', models.CharField(choices=[('alcohol', 'alcohol'), ('aldehyde', 'aldehyde'), ('unusual: see notes', 'unusual: see notes')], default='unusual: see notes', max_length=18)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='TE',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('cyclic', models.BooleanField()),
                ('ring', models.IntegerField(default=0)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='X',
            fields=[
                ('domain_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='pks.Domain')),
                ('active', models.BooleanField(default=True)),
            ],
            bases=('pks.domain',),
        ),
        migrations.CreateModel(
            name='Subunit',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('genbankAccession', models.CharField(max_length=2000)),
                ('name', models.CharField(max_length=2000)),
                ('start', models.PositiveIntegerField()),
                ('stop', models.PositiveIntegerField()),
                ('sequence', models.TextField()),
                ('acc', models.TextField()),
                ('acc20', models.CharField(max_length=1000000, validators=[django.core.validators.RegexValidator(re.compile('^\\d+(?:,\\d+)*\\Z'), code='invalid', message='Enter only digits separated by commas.')])),
                ('accPlotFile', models.ImageField(upload_to='accplots')),
                ('ss', models.TextField()),
                ('ss8', models.TextField()),
                ('ssPlotFile', models.ImageField(upload_to='ssplots')),
                ('sense', models.CharField(max_length=3)),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pks.Cluster')),
            ],
        ),
        migrations.CreateModel(
            name='Standalone',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.PositiveSmallIntegerField()),
                ('name', models.CharField(max_length=2000)),
                ('start', models.PositiveIntegerField()),
                ('stop', models.PositiveIntegerField()),
                ('sequence', models.TextField()),
                ('cluster', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pks.Cluster')),
            ],
        ),
        migrations.CreateModel(
            name='Module',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('order', models.IntegerField()),
                ('loading', models.BooleanField()),
                ('terminal', models.BooleanField()),
                ('iterations', models.PositiveIntegerField(default=1)),
                ('product', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, to='compounddb.Compound')),
                ('subunit', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pks.Subunit')),
            ],
        ),
        migrations.AddField(
            model_name='domain',
            name='module',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='pks.Module'),
        ),
    ]
